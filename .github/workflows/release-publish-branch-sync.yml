name: "Post-release automation"
description: "Automates post-release tasks like generating release notes, creating PRs, and notifying via Slack"

env:
  GH_TOKEN:          ${{ secrets.GITHUB_TOKEN }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_RELEASE_WORKFLOW_URL }}

permissions:
  contents: write
  pull-requests: write # open / edit PRs

on:
  release:
    types: [released] # Trigger on release creation

jobs:
  post_release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with: { fetch-depth: 0 }

    - name: Generate release notes if missing
      shell: bash
      run: |
        tag=${{ github.event.release.tag_name }}
        body=$(gh api repos/${{ github.repository }}/releases/tags/$tag --jq .body)
        [[ -n "$body" && "$body" != "null" ]] && exit 0
        gh api --method POST \
          repos/${{ github.repository }}/releases/generate-notes \
          -f tag_name="$tag" --jq .body > notes.md
        gh release edit "$tag" --notes-file notes.md

    - name: Create PR(master→stage)
      id: pr_master_stage
      shell: bash
      run: |
        tag=${{ github.event.release.tag_name }}
        url=$(gh pr list --state open --head master --base stage --json url --jq '.[0].url' || true)
        [[ -z $url ]] && url=$(gh pr create --head master --base stage \
                           --title "Sync master to stage after $tag" \
                           --body  "Automated sync PR after $tag." | tail -n1)
        gh pr edit "$url" --add-label automated-pr
        echo "url=$url"         >>"$GITHUB_OUTPUT"
        echo "number=${url##*/}" >>"$GITHUB_OUTPUT"

    - name: Create PR(stage→develop)
      id: pr_stage_develop
      shell: bash
      run: |
        tag=${{ github.event.release.tag_name }}
        master_stage_url=${{ steps.pr_master_stage.outputs.url }}
        url=$(gh pr list --state open --head stage --base develop --json url --jq '.[0].url' || true)
        [[ -z $url ]] && url=$(gh pr create --head stage --base develop \
                           --title "Sync stage to develop after $tag" \
                           --body  "Please merge the master→stage PR first:\n${master_stage_url}" | tail -n1)
        gh pr edit "$url" --add-label automated-pr
        echo "url=$url" >>"$GITHUB_OUTPUT"

    - name: Resolve actor email
      id: actor_email
      shell: bash
      run: |
        email=$(gh api users/${{ github.actor }} --jq .email 2>/dev/null || echo "")
        echo "email=$email" >>"$GITHUB_OUTPUT"

    - name: Send Slack notification
      shell: bash
      run: |
        pr1="${{ steps.pr_master_stage.outputs.url }}"
        pr2="${{ steps.pr_stage_develop.outputs.url }}"

        payload=$(jq -n \
          --arg event "post_release" \
          --arg title "Release ${{ github.event.release.tag_name }} published" \
          --arg body  "Release notes: ${{ github.event.release.html_url }}" \
          --arg actor "${{ steps.actor_email.outputs.email }}" \
          --arg postReleaseStagePR   "$pr1" \
          --arg postReleaseDevelopPR "$pr2" \
          '{event:$event,
            title:$title,
            body:$body,
            actor:$actor,
            postReleaseStagePR:$postReleaseStagePR,
            postReleaseDevelopPR:$postReleaseDevelopPR}')

        curl -s -X POST -H 'Content-Type: application/json' \
             --data "$payload" "$SLACK_WEBHOOK_URL"
