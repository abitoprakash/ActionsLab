name: "Develop → stage PR"

on:
  workflow_dispatch:
    inputs:
      pr_title:
        description: "Pull‑request title"
        required: true
        type: string
      pr_body:
        description: "Pull‑request body (Confluence link, notes, etc.)"
        required: false
        type: string

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_RELEASE_WORKFLOW_URL }}

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      # 1  Check out the repo so the gh CLI can compare branches
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2  Create the PR develop → stage
      - name: Create PR
        id: pr
        run: |
          PR_URL=$(gh pr create \
              --head develop \
              --base stage \
              --title "${{ github.event.inputs.pr_title }}" \
              --body  "${{ github.event.inputs.pr_body }}" \
              --label "environment:stage")
          echo "url=$PR_URL"   >>"$GITHUB_OUTPUT"
          echo "number=${PR_URL##*/}" >>"$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 3  Get the unique commit authors and request their review
      - name: Collect authors and request review
        id: authors
        run: |
          owner=$(cut -d/ -f1 <<<"$GITHUB_REPOSITORY")
          repo=$(cut -d/ -f2 <<<"$GITHUB_REPOSITORY")
          authors=$(gh api repos/$owner/$repo/pulls/${{ steps.pr.outputs.number }}/commits |
                    jq -r '.[].author.login' | sort -u | tr '\n' ',' | sed 's/,$//')
          if [ -n "$authors" ]; then
            gh pr edit ${{ steps.pr.outputs.number }} --add-reviewer "$authors"
          fi
          echo "csv=$authors" >>"$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 4  Post the generic Slack message via Workflow‑Builder webhook
      - name: Notify Slack
        run: |
          jq -n \
            --arg event    "pr_created" \
            --arg title    "${{ github.event.inputs.pr_title }}" \
            --arg url      "${{ steps.pr.outputs.url }}" \
            --arg body     "${{ github.event.inputs.pr_body }}" \
            --arg mentions "${{ steps.authors.outputs.csv }}" \
            '{event:$event,body:$body,title:$title,mentions:$mentions,url:$url}' |
          curl -s -X POST -H 'Content-Type: application/json' \
               --data @- "$SLACK_WEBHOOK_URL"
