name: "Promote develop â†’ stageâ€¯(PR + Slack)"

# ðŸ‘‡ Give the workflow token the scopes it needs
permissions:
  contents: read          # checkout + gh api
  pull-requests: write    # create / edit PRs, request reviewers

on:
  workflow_dispatch:
    inputs:
      pr_title:
        description: "Pullâ€‘request title"
        required: true
        type: string
      pr_body:
        description: "Pullâ€‘request body (Confluence link, notes, etc.)"
        required: false
        type: string

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_RELEASE_WORKFLOW_URL }}
  GH_TOKEN:          ${{ secrets.GITHUB_TOKEN }}   # shared by all steps

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      # 1Â Â Fetch repo so gh can diff branches
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      # 2Â Â Create PR develop â†’ stage
      - name: Create pull request
        id: pr
        run: |
          url=$(gh pr create \
                 --head develop \
                 --base stage  \
                 --title "${{ github.event.inputs.pr_title }}" \
                 --body  "${{ github.event.inputs.pr_body }}" \
                 --label "environment:stage")
          echo "url=$url" >>"$GITHUB_OUTPUT"
          echo "number=${url##*/}" >>"$GITHUB_OUTPUT"

      # 3Â Â Find unique commit authors and request their review
      - name: Add commit authors as reviewers
        id: reviewers
        run: |
          commits=$(gh api repos/${{ github.repository }}/pulls/${{ steps.pr.outputs.number }}/commits)
          authors=$(jq -r '.[].author.login' <<<"$commits" | sort -u | tr '\n' ',' | sed 's/,$//')
          if [ -n "$authors" ]; then
            gh pr edit ${{ steps.pr.outputs.number }} --add-reviewer "$authors"
          fi
          echo "csv=$authors" >>"$GITHUB_OUTPUT"

      # 4Â Â Notify Slack via your generic Workflowâ€‘Builder webhook
      - name: Send Slack notification
        run: |
          jq -n \
            --arg event    "pr_created" \
            --arg title    "${{ github.event.inputs.pr_title }}" \
            --arg url      "${{ steps.pr.outputs.url }}" \
            --arg body     "${{ github.event.inputs.pr_body }}" \
            --arg mentions "${{ steps.reviewers.outputs.csv }}" \
            '{event:$event,body:$body,title:$title,mentions:$mentions,url:$url}' |
          curl -s -X POST -H 'Content-Type: application/json' \
               --data @- "$SLACK_WEBHOOK_URL"
